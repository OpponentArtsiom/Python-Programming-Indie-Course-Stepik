# Напишите программу, которая распечатает все натуральные числа от 1000 до 2000 включительно.
"""
num = 1000
while num <= 2000:
    print(num)
    num += 1
"""
# Напишите программу,
# которая распечатает все натуральные числа кратные 5 от 195 до 6785 включительно в порядке убывания.
"""
num = 6785
while num >= 195:
    print(num)
    num -= 5
"""
# Мишка и старший брат
"""
a, b = map(int,input().split())
count = 0
while a <= b:
    a *= 3
    b *= 2
    count += 1
print(count)
"""
# Японцы считают цифру «4» очень несчастливой, они даже исключают ее из нумерации этажей
# Давайте и мы, от греха подальше, избавимся от этой цифры в списке numbers. 
# Ваша задача удалить все упоминания цифры «4» в списке numbers и затем вывести список при помощи команды
"""
numbers = [2, 3, 7, 9, 5, 0, 6, 3, 6, 0, 1, 7, 9, 4, 4, 4, 2, 2, 6, 9,
            1, 7, 0, 3, 8, 1, 0, 3, 8, 0, 8, 4, 0, 2, 3, 6, 6, 1, 5, 8,
              7, 2, 3, 8, 7, 7, 1, 2, 2, 8, 4, 3, 4, 8, 0, 7, 9, 8, 3, 7,
                7, 7, 7, 5, 1, 7, 4, 5, 0, 8, 0, 9, 2, 4, 7, 6, 6, 5, 9, 7,
                  1, 7, 8, 8, 3, 4, 9, 7, 6, 4, 2, 0, 0, 0, 9, 4, 0, 9, 4, 4,
                    4, 5, 5, 4, 2, 5, 9, 4, 8, 1, 5, 7, 1, 0, 2, 6, 8, 7, 2, 7,
                      9, 3, 6, 4, 7, 5, 0, 7, 2, 0, 8, 2, 9, 8, 6, 4, 4, 7, 5, 5,
                        9, 4, 9, 5, 6, 9, 1, 1, 3, 1, 5, 2, 1, 7, 0, 0, 7, 8, 1, 3,
                          0, 0, 4, 4, 3, 3, 6, 7, 8, 6, 1, 2, 0, 2, 0, 9, 9, 0, 5, 2,
                            4, 1, 7, 4, 9, 9, 4, 9, 6, 9, 2, 7, 1, 2, 4, 5, 4, 0, 9, 0]
while 4 in numbers:
    numbers.remove(4)
print(*numbers)
"""
# На вход программе поступает слово. Вам необходимо воспроизвести процесс, 
# в котором каждый раз у этого слово будет пропадать первая и последняя буква. 
# Этот процесс необходимо закончить, когда в слове останется только одна буква 
# или слово станет пустой строкой. 
# При этом результат каждого этапа нужно выводить
"""
text = input()
print(text)
while len(text) > 0:
    text = text[1:-1]
    print(text)
"""
"""
text = input()
while text:
    print(text)
    text = text[1:-1]
"""

# Выведите все точные квадраты натуральных чисел, не превосходящие входного натурального числа N.
"""
num = int(input())
count = 1
total = 0
while count ** 2 <= num:
    total = count ** 2
    count += 1
    print(total)    
"""
"""
num = int(input())
count = 1
while count ** 2 <= num:
    print(count ** 2)
    count += 1
"""

# В первый день спортсмен пробежал X километров.
# В каждый последующий день он увеличивал пробег на 15% от предыдущего дня.
# Вам необходимо определить номер дня, в который пробег спортсмена составил не менее Y километров.
# Само число Y будет поступать на вход программе
# Программа получает на вход два натуральных числа X и Y
# Выведите целое число – номер дня, в который спортсмен пробежал не менее Y километров.
"""
x, y = map(int, input().split())  # 10 20
count = 1
while x < y:
    x *= 1.15
    count += 1
print(count)
"""

# Вася и носки
"""
n, m = map(int, input().split())
day = 0
while n > 0:          # Пока носки не кончатся
    n -= 1            # Убавляем носки
    day += 1          # Добавляем день
    if day % m == 0:  # мама докупает носки
        n += 1
print(day)
"""

# Новогодние свечки

"""a, b = map(int, input().split())
time = 0
while a > 0:          # Пока свечи не кончатся
    a -= 1            # Отнимаем свечу
    time += 1         # Добавляем время
    if time % b == 0: # Добавляем свечу
        a += 1        #
print(time)
"""

# В архитектуре компьютера важную роль играют числа, являющиеся степенями двойки: 1, 2, 4, 8 и так далее.
# Напишите программу, которая проверяет, является ли введённое натуральное число степенью двойки.
# Если да, то выводится сама эта степень; если нет, выводится «НЕТ»
"""
num = int( input())
count = 0
while 2 ** count < num:
    count += 1
if 2 ** count == num:
    print(count)
else:
    print("НЕТ")
"""
    
# Зимний вечер в Бурсе
# Напишем программу, которая будет хотя бы приблизительно определять судьбу введённого числа n.
# Начиная с числа n, умножайте имеющееся число на его первую цифру, 
# пока у получившегося числа первая цифра не станет равной 1, либо пока оно не превысит миллиарда. 
# В качестве ответа выведите результат
"""
num = int(input())
first_num = int(str(num)[0])          # находим первую цифру числа способом преобразования int в str и обратно
while first_num != 1 and num < 10**9:
    num = num * first_num
    first_num = int(str(num)[0])
print(num)
"""

# Пользователь вводит целые числа по одному в строке, последовательность оканчивается числом 0. 
# Все, что вводится после 0 не относится к последовательности. 
# Напишите программу, которая выводит сумму всех членов данной последовательности.
"""
num = int(input())
total = num
while num != 0:
    num = int(input())
    total += num
print(total)
"""
# В начале программы переменной n присваивается вводимое значение с клавиатуры (число) для старта условия цикла.
# Далее в самом цикле переменной n присваивается новое вводимое значение.
# Если не объявить n = int(input()) второй раз в цикле, то цикл будет бесконечным, 
# так как переменная n никак не изменяется, а пользователь кроме 1 раза не сможет ввести числа. 
"""
a=int(input())
s=0
while a:
    s=s+a
    a=int(input())
print(s)
"""    

# На каждой отдельной строчке пользователь вводит друг за другом пароли в виде строки символов.
# Валидными паролями будем считать строки, у которых длина варьируется от 5 до 9 символов включительно.
# Как только вы встретите первый невалидный пароль, ваша программа должна закончить считывать пароли и
# вывести последний введенный валидный пароль.
"""
password = input() # вводим пароль
while 5 <= len(password) <= 9: # прописываем условие задачи в цикл
    correct_password = password # если проходит введенный пароль под это условие, запоминаем его как "ПРАВИЛЬНЫЙ"
    password = input() # вводим новый
print(correct_password)
"""

# Собираемся в поход

# У нас в наличии рюкзак, вместимость которого составляет n литров, 
# и наша задача забить его до предела максимально возможно. Нам поступают вещи, 
# объем которых измеряется также в литрах, и мы должны их складывать в наш рюкзак без возможности пропуска. 
# Как только суммарный объем новой добавляемой вещи превысит вместимость рюкзака, 
# ваша программа должна вывести слово "Довольно!" и затем на отдельных строчках суммарный объем вещей, 
# которые мы смогли упаковать в рюкзак, и их количество
"""
bag_capacity = int(input())
things = int(input())
total = 0
count = 0
while things <= bag_capacity:
    total = things
    count += 1
    things += int(input())
print("Довольно!")
print(total)
print(count)
"""
"""
R = []                # "РЮКЗАК"
V = int(input())      # вводим объём рюкзака
s = int(input())      # вводим объём первой вещи
while V - s >= 0:     # кладём вещь в рюкзак, если помещается
    V = V - s         # считаем оставшееся место
    R.append(s)       # вещи в рюкзаке
    s = int(input())  # берём следующую вещь
print("Довольно!")    # последняя вещь не уместилась
print(sum(R))         # выводим объём взятого барахла
print(len(R))         # выводим количество взятых вещей
"""








#############
#############
#############
#############
#############
#############
#############
#############



#______________________Обход всех цифр числа_________________________#
# Перебирает все цифры
"""
n = 4782
while n > 0:
    print(n%10)
    n = n//10
"""
# Обход всех цифр числа в двоичной системе
"""
n = 14
while n > 0:
    print(n%2)
    n = n//2
"""
# Узнаем сколько разрядов в числе:
"""
n = int(input('Введите число: '))
count = 0
while n > 0:
    n = n//10
    count = count + 1
print(f"Количество цифр={count}")
"""
# Найдем сколько всего четных цифр:
"""
n = int(input('Введите число: '))
count_even = 0
while n > 0:
    last = n % 10
    if last % 2 == 0:
        count_even = count_even + 1
    n = n//10
print(f"Количество четных цифр = {count_even}")
"""
# Посчитаем сумму всех цифр числа:
"""
n = int(input('Введите число: '))
s = 0
while n > 0:
    s = s + n % 10
    n = n//10
print(f"Сумма всех цифр = {s}")
"""

# Посчитаем произведение всех цифр числа:
"""
n = int(input('Введите число: '))
product = 1
while n > 0:
    last = n % 10
    product = product * last
    n = n//10
print(f"Произведение всех цифр = {product}")
"""
#  Найдем самую большую и самую маленькую цифру в числе: 
"""
n = int(input('Введите число: '))
maximum = 0
minimum = 9
while n > 0:
    last = n % 10
    if last > maximum :
        maximum = last
    if last < minimum :
        minimum = last
    n = n//10
print(f"Самая большая цифра = {maximum}")
print(f"Самая маленькая цифра = {minimum}")
"""
# Программа принимает на вход одно натуральное число и выводит его цифры в столбик в обратном порядке.
"""
num = int(input())
while num > 0:
    print(num % 10) 
    num = num // 10
"""

# Программа принимает на вход одно натуральное число и выводит на экран сумму цифр данного числа
"""
num = int(input())
sum = 0
while num > 0:
    sum = sum + num % 10
    num //= 10
print(sum)
"""
# Программа принимает на вход одно натуральное число и выводит на экран произведение цифр данного числа
"""
num = int(input())
mult = 1
while num > 0:
    last = num % 10
    mult = mult * last
    num //= 10
print(mult)
"""

# Программа принимает на вход одно натуральное число и выводит на экран минимальную 
# и максимальную цифры данного числа в отдельных строчках
"""
num = int(input())
maximum = 0
minimum = 9
while num > 0:
    last = num % 10
    if last > maximum:
        maximum = last
    if last < minimum:
        minimum = last
    num //= 10
print(minimum, maximum, sep='\n')
"""
# Программа принимает на вход одно натуральное число. 
# Ваша задачи найти сколько раз встречается цифра 7 в этом числе
"""
num = int(input())
count = 0
while num > 0:
    last = num % 10
    if last == 7:
        count += 1
    num //= 10
print(count)
"""

# Программа принимает на вход одно натуральное число и 
# выводит его цифры в двоичной системе в столбик в обратном порядке.
"""
num = int(input())
while num > 0:
    print(num % 2)
    num //= 2
"""

# ___________ Нахождение всех дилителей цисла_____________
"""
num = int(input())
digit = 1
while digit <= num:
    if num % digit == 0:
        print(digit)
    digit += 1"""

# Дано натуральное число N. Определить, является ли оно простым. 
# Натуральное число N называется простым, если у него есть только два делителя: единица и само число N. 
"""
num = int(input())
digit = 1
count = 0
while digit * digit <= num:
    if num % digit == 0:
        if digit == num // digit:
            count += 1
        else:
            count += 2
    digit += 1
if count != 2:
    print("No")
else:
    print("Yes")
"""
"""
n = int(input())
i = 1
a = []
while i * i <= n:
    if n % i == 0:
        a.append(i)
        if i != n // i:
            a.append(n // i)
    i += 1
if len(a) == 2:
    print('Yes')
else:
    print('No')
"""    
# Программа получает на вход натуральное число N. 
# Нужно найти сумму его делителей. 
"""
num = int(input())
digit = 1
sum = 0
while digit <= num:
    if num % digit == 0:
        sum += digit
    digit += 1
print(sum)
"""

# Даны два натуральных числа A и B. Требуется найти их наибольший общий делитель (НОД) методом вычитания
"""
a, b = map(int, input().split())
while a != b:
    if a > b:
        a -= b
    else:
        b -= a
print(a)
"""

# Алгоритм Евклида: нахождения НОД делением
"""
a, b = map(int, input().split())
while b > 0:
    c = a % b
    a = b
    b = c
print(a)
"""
# НОК
"""
a, b = map(int, input().split())
c = a * b
while a != b:
    if a > b:
        a -= b
    else:
        b -= a
print(c // a)
"""
"""
a, b = map(int, input().split())
c = a * b
while b > 0:
    a, b = b, a % b
print(int(c / a))
"""

# Программа получает на вход натуральное число n > 1. 
# Выведите минимальный делитель этого числа, отличный от единицы.
"""
num = int(input())
count = 1
while count < num:
    count += 1
    if num % count == 0:
        break
print(count)
"""
# Давайте переберем все числа от а до b включительно и будем их выводить на экран, 
# при этом нужно выполнить следующие условия:
# пропускать (не выводить) числа, которые делятся на 2 или на 3
# если встречаете число, кратное 777, необходимо принудительно закончить цикл, само это число не выводить
"""
a = int(input())-1
b = int(input())
while a < b:
    a += 1
    if a % 777 == 0:   
        break
    if a % 2 == 0 or a % 3== 0: 
        continue
    print(a) 
"""
# Гипотеза Коллатца
"""
num = int(input())
count = 0
while num > 1:
    if num % 2 == 0:
        num = num // 2
        count += 1
    else:
        num = 3 * num + 1
        count += 1
print(count)"""

# Вам на вход поступает слово и ваша задача в цикле while обойти все его буквы и распечатать их в формате фразы:
# «Текущая буква: <letter>».
# Как только вы встретите строчные английские буквы «e» или «a» нужно вывести фразу «Ага! Нашлась»,
# перестать печатать буквы и принудительно выйти из цикла.
# В случае, если в слове не оказалось букв «e» или «a» необходимо вывести фразу «Распечатали все буквы»
"""
text = input()
word = list(text)
while len(word) > 0:
    if word[0] == 'e' or word[0] == 'a':
        print("Ага! Нашлась")
        break
    print(f"Текущая буква: {word[0]}")
    del word[0]
else:
    print("Распечатали все буквы")"""
"""
word = input()
letter = 0
while letter < len(word):
    if word[letter] in 'ae':
        print('Ага! Нашлась')
        break
    print('Текущая буква:', word[letter])
    letter += 1
else:
    print('Распечатали все буквы')
"""

